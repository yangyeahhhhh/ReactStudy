{"ast":null,"code":"import _initializerDefineProperty from \"/Users/apple/Desktop/hello-react/ReactStudy/workspace/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/apple/Desktop/hello-react/ReactStudy/workspace/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/apple/Desktop/hello-react/ReactStudy/workspace/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { observable, action, computed, makeObservable, toJS } from 'mobx';\nlet TodoStore = (_class = (_temp = class TodoStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_todo\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_todos\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"_searchText\", _descriptor3, this);\n\n    makeObservable(this);\n  }\n\n  get todo() {\n    return this._todo;\n  }\n\n  get todos() {\n    // return this._todos ? this._todos.slice() : [];\n    return toJS(this._todos);\n  }\n\n  get searhText() {\n    return this._searchText;\n  }\n\n  setTodoProps(name, value) {\n    this._todo = { ...this._todo,\n      [name]: value\n    };\n  }\n\n  setSearchText(searchText) {\n    this._searchText = searchText;\n    console.log(\"_searchText\", this._searchText);\n  }\n\n  addTodos(todo) {\n    this._todos.push(todo);\n  }\n\n  selectedTodo(todo) {\n    this._todo = todo;\n  }\n\n  updateTodo() {\n    let foundTodo = this._todos.find(todo => todo.id === this._todo.id);\n\n    foundTodo.title = this._todo.title;\n    foundTodo.date = this._todo.date;\n    this._todo = {};\n  }\n\n  removeTodo() {\n    let index = this._todos.findIndex(todo => todo.id === this._todo.id);\n\n    if (index > -1) {\n      this._todos.splice(index, 1);\n    }\n\n    this._todo = {};\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_todo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_todos\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"_searchText\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"todo\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"todo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"todos\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"todos\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"searhText\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"searhText\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setTodoProps\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setTodoProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setSearchText\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setSearchText\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addTodos\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTodos\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"selectedTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"selectedTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeTodo\"), _class.prototype)), _class);\nexport default new TodoStore();","map":{"version":3,"sources":["/Users/apple/Desktop/hello-react/ReactStudy/workspace/5.todo-mobx/src/store/TodoStore.js"],"names":["observable","action","computed","makeObservable","toJS","TodoStore","constructor","todo","_todo","todos","_todos","searhText","_searchText","setTodoProps","name","value","setSearchText","searchText","console","log","addTodos","push","selectedTodo","updateTodo","foundTodo","find","id","title","date","removeTodo","index","findIndex","splice"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,cAAvC,EAAuDC,IAAvD,QAAmE,MAAnE;IAEMC,S,sBAAN,MAAMA,SAAN,CAAgB;AAEdC,EAAAA,WAAW,GAAE;AAAA;;AAAA;;AAAA;;AACXH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAWD,MACII,IADJ,GACU;AACR,WAAO,KAAKC,KAAZ;AACD;;AAED,MACIC,KADJ,GACW;AACT;AACA,WAAOL,IAAI,CAAC,KAAKM,MAAN,CAAX;AACD;;AAED,MACIC,SADJ,GACe;AACb,WAAO,KAAKC,WAAZ;AACD;;AAGDC,EAAAA,YADA,CACaC,IADb,EACmBC,KADnB,EACyB;AACvB,SAAKP,KAAL,GAAa,EACX,GAAG,KAAKA,KADG;AAEX,OAACM,IAAD,GAASC;AAFE,KAAb;AAID;;AAGDC,EAAAA,aADA,CACcC,UADd,EACyB;AACvB,SAAKL,WAAL,GAAmBK,UAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAKP,WAA/B;AACD;;AAGDQ,EAAAA,QADA,CACSb,IADT,EACc;AACZ,SAAKG,MAAL,CAAYW,IAAZ,CAAiBd,IAAjB;AACD;;AAGDe,EAAAA,YADA,CACaf,IADb,EACkB;AAChB,SAAKC,KAAL,GAAaD,IAAb;AACD;;AAGDgB,EAAAA,UADA,GACY;AACV,QAAIC,SAAS,GAAG,KAAKd,MAAL,CAAYe,IAAZ,CAAmBlB,IAAD,IAAUA,IAAI,CAACmB,EAAL,KAAY,KAAKlB,KAAL,CAAWkB,EAAnD,CAAhB;;AACAF,IAAAA,SAAS,CAACG,KAAV,GAAkB,KAAKnB,KAAL,CAAWmB,KAA7B;AACAH,IAAAA,SAAS,CAACI,IAAV,GAAiB,KAAKpB,KAAL,CAAWoB,IAA5B;AAEA,SAAKpB,KAAL,GAAa,EAAb;AACD;;AAGDqB,EAAAA,UADA,GACY;AACV,QAAIC,KAAK,GAAG,KAAKpB,MAAL,CAAYqB,SAAZ,CAAuBxB,IAAI,IAAIA,IAAI,CAACmB,EAAL,KAAY,KAAKlB,KAAL,CAAWkB,EAAtD,CAAZ;;AACA,QAAGI,KAAK,GAAG,CAAC,CAAZ,EAAc;AACZ,WAAKpB,MAAL,CAAYsB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD;;AAED,SAAKtB,KAAL,GAAa,EAAb;AACD;;AAxEa,C,+EAMbR,U;;;;;WACO,E;;0EAEPA,U;;;;;WACQ,E;;+EAERA,U;;;;;WACa,E;;yDAEbE,Q,uIAKAA,Q,4IAMAA,Q,mJAKAD,M,uJAQAA,M,mJAMAA,M,kJAKAA,M,oJAKAA,M,kJASAA,M;AAYH,eAAe,IAAII,SAAJ,EAAf","sourcesContent":["import { observable, action, computed, makeObservable, toJS } from 'mobx';\n\nclass TodoStore {\n\n  constructor(){\n    makeObservable(this);\n  }\n\n  @observable\n  _todo = {}; // id, title, date\n\n  @observable\n  _todos = [];\n\n  @observable\n  _searchText = '';\n\n  @computed\n  get todo(){\n    return this._todo;\n  }\n\n  @computed\n  get todos(){\n    // return this._todos ? this._todos.slice() : [];\n    return toJS(this._todos);\n  }\n\n  @computed\n  get searhText(){\n    return this._searchText;\n  }\n  \n  @action\n  setTodoProps(name, value){\n    this._todo = {\n      ...this._todo,\n      [name] : value\n    }\n  }\n\n  @action\n  setSearchText(searchText){\n    this._searchText = searchText;\n    console.log(\"_searchText\",this._searchText)\n  }\n\n  @action\n  addTodos(todo){\n    this._todos.push(todo)\n  }\n\n  @action\n  selectedTodo(todo){\n    this._todo = todo;\n  }\n\n  @action\n  updateTodo(){\n    let foundTodo = this._todos.find( (todo) => todo.id === this._todo.id);\n    foundTodo.title = this._todo.title;\n    foundTodo.date = this._todo.date;\n\n    this._todo = {};\n  }\n\n  @action\n  removeTodo(){\n    let index = this._todos.findIndex( todo => todo.id === this._todo.id );\n    if(index > -1){\n      this._todos.splice(index, 1);\n    }\n\n    this._todo = {};\n  }\n\n}\n\nexport default new TodoStore();"]},"metadata":{},"sourceType":"module"}